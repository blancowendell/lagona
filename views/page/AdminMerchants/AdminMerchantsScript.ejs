<script>
  let base64String = "";
  let merchant_id = "";
  $(document).ready(function () {
    LoadTable();
    initMap();


    function initMap() {
      const mapElement = document.getElementById("farmMap");
      if (!mapElement) {
        console.error("Map container not found!");
        return;
      }
      const map = new google.maps.Map(mapElement, {
        center: { lat: 13.41, lng: 122.56 },  
        zoom: 6,  
      });


      // Add markers to the map
      const markers = [
        { position: { lat: -34.397, lng: 150.644 }, farm_id: "Farm 1" },
        { position: { lat: -35.297, lng: 149.644 }, farm_id: "Farm 2" },
      ];

      markers.forEach((point) => {
        new google.maps.Marker({
          position: point.position,
          map: map,
          title: point.farm_id,
          icon: {
            url: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQx0y1Ensv9-dF8rpNkXhfAEfQnyWF4kXMoE_OyWbI8GQ&s", // Custom icon URL
            scaledSize: new google.maps.Size(40, 40), 
            origin: new google.maps.Point(0, 0), 
            anchor: new google.maps.Point(20, 40), 
          },
        });
      });
    }

    function LoadTable() {
      $("#dataTableMerchants").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/AdminMerchants/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            console.log(data);

            $.each(data, (key, item) => {
              var action = `
                                  <button id="editBtn" class="lagona_class-btn btn" name="editBtn" data-bs-toggle="modal" data-bs-target="#editBusinessHubModal">
                                  <i class="fas fa-fw fa-pen"></i>
                                  </button>
                                  <button id="viewBtn" class="lagona_class-btn btn" name="topUpBtn" data-bs-toggle="modal" data-bs-target="#viewMerchantModal">
                                  <i class="fas fa-fw fa-eye"></i>
                                  </button>
                              `;

              finalData.push({
                merchant_id: item.merchant_id,
                business_name: item.business_name,
                business_branch: item.business_branch,
                mobile: item.mobile,
                status: item.status,
                create_date: item.create_date,
                action: action,
              });
            });

            return finalData;
          },
        },
        columns: [
          { data: "merchant_id" },
          { data: "business_name" },
          { data: "business_branch" },
          { data: "mobile" },
          { data: "status" },
          { data: "create_date" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          // var jobStatusCell = $(row).find("td:eq(2)");
          // var jobStatusText = data.assessment_type;

          // var jobStatusClass = "";
          // if (jobStatusText === "Personality Test") {
          //     jobStatusClass =
          //         "badge badge-sm bg-gradient-success text-white rounded-pill";
          // } else if (jobStatusText === "Interest Assessment") {
          //     jobStatusClass =
          //         "badge badge-sm bg-gradient-danger text-white rounded-pill";
          // }

          // else if (jobStatusText === "Skill Assessment") {
          //     jobStatusClass =
          //         "badge badge-sm bg-gradient-warning text-black rounded-pill";
          // }

          // jobStatusCell.html(
          //     `<span class="${jobStatusClass}">${jobStatusText}</span>`
          // );

          $("td", row).each(function () {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
            this.style.fontSize = "14px";
          });
        },
        initComplete: function () {
          $("#dataTableStrandsType thead th").css({
            "font-size": "14px",
            "font-weight": "bold",
            "text-align": "center",
          });
        },
      });
    }

    $(document).on("click", "#saveMerchantBtn", function () {
      let business_name = $("#addbusinessname").val();
      let business_branch = $("#addbranch").val();
      let merchant_address = $("#addmerchaddress").val();
      let merchant_owner = $("#addowner").val();
      let latitude = $("#addlatitude").val();
      let longitude = $("#addlongitude").val();
      let UploadQRCode = $("#addqrcode").val();
      let phone_number = $("#addcpnumber").val();
      let email = $("#addemail").val();
      let username = $("#addusername").val();
      let password = $("#addpassword").val();
      let merchant_type = $("#addmerchtype").val();
      let logo = base64String;

      var message = "";


      if (merchant_owner === "") {
        message += "Merchant Owner is required ";
      }

      if (business_name === "") {
        message += "Business Name is required ";
      }

      if (business_branch === "") {
        message += "Business Branch is required ";
      }

      if (merchant_address === "") {
        message += "Merchant Address is required ";
      }
      
      if (latitude === "") {
        message += "Latitude Address is required ";
      }

      if (longitude === "") {   
        message += "Longitude Address is required ";
      }

      if (UploadQRCode === "") {
        message += "QR Code is required ";
      }

      if (email === "" || email === null) { 
        message += "Load Email is required ";
      }

      if (logo === "") {
        message += "Logo is required ";
      }

      if (username === "" || username === null) {
        message += "Load Username is required ";
      }

      if (password === "" || password === null) {
        message += "Load Password is required ";
      }

      if (phone_number === "" || phone_number === null) {
        message += "Load Phone Number is required ";
      }

      if (merchant_type === "" || merchant_type === null) {
        message += "Load Merchant Type is required ";
      }


      if (message !== "") {
        toastr.error(`Please fill up ${message}`, "Required");
      } else {
        $.ajax({
          type: "POST",
          url: "/AdminMerchants/save",
          data: {
            business_name: business_name,
            merchant_type: merchant_type,
            merchant_owner: merchant_owner,
            business_branch: business_branch,
            merchant_address: merchant_address,
            latitude: latitude,
            longitude: longitude,   
            qr_code: UploadQRCode,
            email: email,
            phone_number: phone_number,
            logo: logo,
            username: username,
            password: password,
          },
          success: function (result) {
            if (result.msg == "success") {
              toastr.success("Saved Successfully", "Success");
              setTimeout(function () {
                window.location.reload();
              }, 500);
            } else {
              toastr.warning("Data already exists!", "Warning");
            }
          },
          error: function (err) {
            toastr.warning("Data already exists!", "Warning");
          },
        });
      }
    });

    $("#dataTableMerchants tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      merchant_id = dataRow[0];
      console.log(dataRow);
    });

    $(document).on("click", "#viewBtn", function () {
      $.ajax({
        type: "POST",
        url: "/AdminMerchants/viewmerchant",
        data: {
            merchant_id: merchant_id,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;            

            $.each(existingData, (key, item) => {
              $("#viewcode").text(item.merchant_code);
              $("#viewfname").text(item.merchant_fullname);
              $("#viewbname").text(item.business_name);
              $("#viewbranch").text(item.business_branch);
              $("#viewbranch2").text(item.business_branch);
              $("#viewaddress").text(item.merchant_address);
              $("#viewlocation").text(item.latitude + item.longitude);
              $("#viewmobile").text(item.mobile);
              $("#viewemail").text(item.email);
              $("#viewuser").text(item.username);
              $("#viewpassword").text(item.password);
              $("#viewUserImagePreview").attr(
                "src",
                "data:image/jpg;base64," + item.logo
              );
              base64String = item.logo;
              $("#viewstatus").text(item.status);
            });
          } else {
            toastr.error("Error fetching employee data", "Error");
          }
        },
        error: function (err) {
          toastr.error(
            "An error occurred while fetching employee data",
            "Error"
          );
        },
      });
    });

    $(document).on("click", "#saveEditHubBtn", function () {
      let id = hub_id;
      let hubname = $("#editHubName").val();
      let ownername = $("#editOwnerName").val();
      let hubaddress = $("#editHubAddress").val();
      let phonenumber = $("#editPhoneNumber").val();
      let email = $("#editEmail").val();
      let username = $("#editUsername").val();
      let password = $("#editPassword").val();

      var message = "";

      if (hubname === "") {
        message += "Hub Name is required ";
      }

      if (ownername === "") {
        message += "Owner Name is required ";
      }

      if (hubaddress === "") {
        message += "Hub Address is required ";
      }

      if (phonenumber === "") {
        message += "Phone Number is required ";
      }

      if (email === "") {
        message += "Email is required ";
      }

      if (username === "") {
        message += "Username is required ";
      }

      if (password === "") {
        message += "Password is required ";
      }

      if (message !== "") {
        toastr.error(`Please fill up ${message}`, "Required");
      } else {
        $.ajax({
          type: "PUT",
          url: "/AdminHubs/edit",
          data: {
            hub_id: id,
            hubname: hubname,
            ownername: ownername,
            hubaddress: hubaddress,
            phonenumber: phonenumber,
            email: email,
            username: username,
            password: password,
          },
          success: function (result) {
            if (result.msg == "success") {
              toastr.success("Saved Successfully", "Success");
              setTimeout(function () {
                window.location.reload();
              }, 2000);
            } else {
              toastr.warning("Data already exists!", "Warning");
            }
          },
          error: function (err) {
            toastr.warning("Data already exists!", "Warning");
          },
        });
      }
    });

    $(document).on("click", "#topUpBtn", function () {
      $.ajax({
        type: "POST",
        url: "/AdminHubs/gettopup",
        data: {
          hub_id: hub_id,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#topuphubcode").html(`Top Up Hub For - ${item.hub_code}`);
              console.log(item.hub_code);

              let formattedBudget = formatPeso(item.budget);
              $("#remainingBalance").text(formattedBudget);
            });
            $.ajax({
              type: "POST",
              url: "/AdminHubs/gettopuphistory",
              data: {
                hub_id: hub_id,
              },
              success: function (historyResult) {
                if (historyResult.msg === "success") {
                  const historyData = historyResult.data;
                  $("#topUpHistoryBody").empty();
                  $.each(historyData, (index, item) => {
                    const row = `
                    <tr>
                      <td>${item.reference_code}</td>
                      <td>${formatPeso(item.amount)}</td>
                      <td>${item.format_create_date}</td>
                      <td>${item.status}</td>
                    </tr>
                  `;
                    $("#topUpHistoryBody").append(row);
                  });
                } else {
                  toastr.error("Error fetching top-up history", "Error");
                }
              },
              error: function (err) {
                toastr.error(
                  "An error occurred while fetching top-up history",
                  "Error"
                );
              },
            });
          } else {
            toastr.error("Error fetching hub data", "Error");
          }
        },
        error: function (err) {
          toastr.error("An error occurred while fetching hub data", "Error");
        },
      });
    });

    $(document).on("click", "#saveTopUpHubBtn", function () {
      console.log("click");
      let id = hub_id;
      let amount = $("#topupamount").val();

      console.log(amount, "amount");
      console.log(hub_id, "hub_id");

      var message = "";

      let numericAmount = parseFloat(amount.replace(/[^\d.-]/g, ""));
      if (amount === "" || isNaN(numericAmount) || numericAmount <= 0) {
        message += "Valid amount is required. ";
      }

      if (id === "") {
        message += "Hub Undefined";
      }

      if (message !== "") {
        toastr.error(`Please fill up ${message}`, "Required");
      } else {
        Swal.fire({
          title: "Are you sure?",
          text: `You are about to top up ${amount} to the hub. Do you want to proceed?`,
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes, top up it!",
          cancelButtonText: "Cancel",
          reverseButtons: true,
        }).then((result) => {
          if (result.isConfirmed) {
            Swal.fire({
              title: "Processing...",
              text: "Please wait while we top up the amount.",
              icon: "info",
              didOpen: () => {
                Swal.showLoading();
              },
              allowOutsideClick: false,
            });

            $.ajax({
              type: "POST",
              url: "/AdminHubs/topup",
              data: {
                hub_id: id,
                amount: amount,
              },
              success: function (result) {
                if (result.msg == "success") {
                  toastr.success("Saved Successfully", "Success");
                  // Close the SweetAlert loading after 2 seconds and reload the page
                  setTimeout(function () {
                    Swal.close(); // Close the loading SweetAlert
                    window.location.reload();
                  }, 2000);
                } else {
                  toastr.warning("Data already exists!", "Warning");
                  Swal.close(); // Close the SweetAlert if error occurs
                }
              },
              error: function (err) {
                toastr.warning("An error occurred!", "Error");
                Swal.close(); // Close the SweetAlert if error occurs
              },
            });
          } else {
            console.log("Top-up cancelled");
          }
        });
      }
    });

    $("#searchTopUpHistory").on("input", function () {
      var query = $(this).val().toLowerCase();
      $("#topUpHistoryBody tr").each(function () {
        var referenceCode = $(this).find("td:eq(0)").text().toLowerCase();
        var amount = $(this).find("td:eq(1)").text().toLowerCase();

        if (referenceCode.includes(query) || amount.includes(query)) {
          $(this).show();
        } else {
          $(this).hide();
        }
      });
    });

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableStudents");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    $(".toggle-password").on("click", function () {
      const passwordField = $("#addpassword");
      const eyeIcon = $("#eyeIcon");
      const fieldType =
        passwordField.attr("type") === "password" ? "text" : "password";
      passwordField.attr("type", fieldType);
      if (fieldType === "password") {
        eyeIcon.removeClass("bx-show").addClass("bx-hide");
      } else {
        eyeIcon.removeClass("bx-hide").addClass("bx-show");
      }
    });

    $(".toggle-password").on("click", function () {
      const passwordField = $("#editPassword");
      const eyeIcon = $("#eyeIconEdit");
      const fieldType =
        passwordField.attr("type") === "password" ? "text" : "password";
      passwordField.attr("type", fieldType);
      if (fieldType === "password") {
        eyeIcon.removeClass("bx-show").addClass("bx-hide");
      } else {
        eyeIcon.removeClass("bx-hide").addClass("bx-show");
      }
    });


    $(document).on("change", "#viewImage", function (e) {
      const input = document.getElementById("viewImage");
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("viewUserImagePreview");
        preview.src = reader.result;
      };
      imageUploadedOld();
    });

    function imageUploadedOld() {
      const input = document.getElementById("viewImage");
      const file = input.files[0];

      var reader = new FileReader();

      reader.onload = function (e) {
        const img = new Image();
        img.src = e.target.result;

        img.onload = function () {
          const canvas = document.createElement("canvas");
          const ctx = canvas.getContext("2d");
          const targetWidth = 250;
          const targetHeight = 250;
          canvas.width = targetWidth;
          canvas.height = targetHeight;
          ctx.drawImage(img, 0, 0, targetWidth, targetHeight);
          base64String = canvas
            .toDataURL()
            .replace("data:image/png;base64,", ""); 

          imageBase64Stringsep = base64String;
        };

      };
      reader.readAsDataURL(file);
    }

    $(document).on("change", "#addmerchantimg", function (e) {
      const input = document.getElementById("addmerchantimg");
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("userImagePreview");
        preview.src = reader.result;
      };
      imageUploadedOld();
    });

    function imageUploadedOld() {
      const input = document.getElementById("addmerchantimg");
      const file = input.files[0];

      var reader = new FileReader();

      reader.onload = function (e) {
        const img = new Image();
        img.src = e.target.result;

        img.onload = function () {
          const canvas = document.createElement("canvas");
          const ctx = canvas.getContext("2d");
          const targetWidth = 250;
          const targetHeight = 250;
          canvas.width = targetWidth;
          canvas.height = targetHeight;
          ctx.drawImage(img, 0, 0, targetWidth, targetHeight);
          base64String = canvas
            .toDataURL()
            .replace("data:image/png;base64,", ""); 

          imageBase64Stringsep = base64String;
        };

      };
      reader.readAsDataURL(file);
    }
  });
</script>
