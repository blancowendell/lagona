<script>
    let base64String = "";
    let item_id = "";
    $(document).ready(function () {
      LoadTable();
      LoadCategory();
      LoadSize();
      LoadCategoryEdit();
      LoadSizeEdit();
  
      function LoadTable() {
        $("#dataTableItems").DataTable({
          destroy: true,
          processing: true,
          serverSide: true,
          paging: false,
          searching: false,
          info: false,
          scrollY: 600,
          scrollCollapse: true,
          serverMethod: "GET",
          ajax: {
            url: "/MerchantItem/load",
            dataSrc: (json) => {
              var finalData = [];
              var data = json.data;
  
              console.log(data);
  
              $.each(data, (key, item) => {

                var action = `
                    <button id="editBtn" class="lagona_class-btn btn" name="editBtn" data-bs-toggle="modal" data-bs-target="#editItemsModal">
                    <i class="fas fa-fw fa-pen"></i>
                `;

                var imgElement = document.createElement("img");
                imgElement.src = "data:image/jpg;base64," + item.item_image;
                imgElement.alt = "Profile Image";
                imgElement.style.width = "90px";
                imgElement.style.height = "90px";
  
                finalData.push({
                  item_id: item.item_id,
                  item_image: imgElement.outerHTML,
                  item_name: item.item_name,
                  category: item.category,
                  size: item.size,
                  item_price: item.item_price,
                  is_available: item.is_available,
                  created_at: item.created_at,
                  action: action,
                });
              });
  
              return finalData;
            },
          },
          columns: [
            { data: "item_id" },
            { data: "item_name" },
            { data: "item_image" },
            { data: "category" },
            { data: "size" },
            {
              data: "item_price",
              render: function (data, type, row) {
                return (
                  "₱" +
                  parseFloat(data).toLocaleString("en-US", {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2,
                  })
                );
              },
            },
            { data: "is_available" },
            { data: "created_at" },
            { data: "action" },
          ],
          createdRow: function (row, data, dataIndex) {
            $("td", row).each(function () {
              this.style.textAlign = "center";
              this.style.verticalAlign = "middle";
              this.style.fontSize = "14px";
            });
          },
          initComplete: function () {
            $("#dataTableStrandsType thead th").css({
              "font-size": "14px",
              "font-weight": "bold",
              "text-align": "center",
            });
          },
        });
      }

      function LoadCategory() {
        $.ajax({
          type: "GET",
          url: "/MerchantCategory/load",
          success: function (result) {
            var data = result.data;

            $.each(data, function (key, item) {
              var options = new Option(item.category_id, item.category_id);
              $(options).html(item.category_name);
              $("#addcategory").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }

      function LoadSize() {
        $.ajax({
          type: "GET",
          url: "/MerchantSize/load",
          success: function (result) {
            var data = result.data;

            $.each(data, function (key, item) {
              var options = new Option(item.size_id, item.size_id);
              $(options).html(item.size_name);
              $("#addsize").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }

      $(document).on("click", "#saveItemsBtn", function () {
        let size = $("#addsize").val();
        let category = $("#addcategory").val();
        let item_name = $("#additemname").val();
        let item_amount = $("#topupamount").val();
        let description = $("#addDescription").val();
        let image = base64String;
  
        var message = "";
  
  
        if (size === "") {
          message += "Merchant Owner is required ";
        }
  
        if (category === "") {
          message += "Business Name is required ";
        }
  
        if (item_name === "") {
          message += "Business Branch is required ";
        }
  
        if (item_amount === "") {
          message += "Merchant Address is required ";
        }
        
        if (description === "") {
          message += "Latitude Address is required ";
        }
  
        if (image === "") {   
          message += "Longitude Address is required ";
        }
  
  
        if (message !== "") {
          toastr.error(`Please fill up ${message}`, "Required");
        } else {
          item_amount = item_amount.replace(/,/g, "").replace("₱", "");
          $.ajax({
            type: "POST",
            url: "/MerchantItem/save",
            data: {
              size: size,
              category: category,
              item_name: item_name,
              item_amount: parseFloat(item_amount),
              description: description,
              image: image,
            },
            success: function (result) {
              if (result.msg == "success") {
                toastr.success("Saved Successfully", "Success");
                setTimeout(function () {
                  window.location.reload();
                }, 1000);
              } else {
                toastr.warning("Data already exists!", "Warning");
              }
            },
            error: function (err) {
              toastr.warning("Data already exists!", "Warning");
            },
          });
        }
      });
  
      function LoadSizeEdit() {
        $.ajax({
          type: "GET",
          url: "/MerchantSize/load",
          success: function (result) {
            var data = result.data;

            $.each(data, function (key, item) {
              var options = new Option(item.size_id, item.size_id);
              $(options).html(item.size_name);
              $("#editsize").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }

      function LoadCategoryEdit() {
        $.ajax({
          type: "GET",
          url: "/MerchantCategory/load",
          success: function (result) {
            var data = result.data;

            $.each(data, function (key, item) {
              var options = new Option(item.category_id, item.category_id);
              $(options).html(item.category_name);
              $("#editcategory").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }


      $("#dataTableItems tbody").on("click", "tr", function () {
        var dataRow = [];
        $(this)
          .closest("tr")
          .find("td")
          .each(function () {
            dataRow.push($(this).text());
          });
        item_id = dataRow[0];
        console.log(dataRow);
      });
  
      $(document).on("click", "#editBtn", function () {
        $.ajax({
          type: "POST",
          url: "/MerchantItem/getitem",
          data: {
            item_id: item_id,
          },
          success: function (result) {
            if (result.msg === "success") {
              const existingData = result.data;            
  
              $.each(existingData, (key, item) => {
                $("#edititemname").val(item.item_name);
                $("#editsize").val(item.size);
                $("#editcategory").val(item.category_id);
                $("#editDescription").val(item.description);
                $("#edittopupamount").val(formatCurrencyValue(item.item_price));
                $("#editAvailability").val(item.is_available);
                $("#viewUserImagePreview").attr(
                  "src",
                  "data:image/jpg;base64," + item.item_image
                );
                base64String = item.item_image;
              });
            } else {
              toastr.error("Error fetching employee data", "Error");
            }
          },
          error: function (err) {
            toastr.error(
              "An error occurred while fetching employee data",
              "Error"
            );
          },
        });
      });
  
      $(document).on("click", "#editItemsBtn", function () {
        let id = item_id;
        let item_name = $("#edititemname").val();
        let size = $("#editsize").val();
        let category_id = $("#editcategory").val();
        let description = $("#editDescription").val();
        let item_price = $("#edittopupamount").val();
        let is_available = $("#editAvailability").val();
        let item_image = base64String;
  
        var message = "";
  
        if (item_name === "") {
          message += "Hub Name is required ";
        }
  
        if (size === "") {
          message += "Owner Name is required ";
        }
  
        if (category_id === "") {
          message += "Hub Address is required ";
        }
  
        if (description === "") {
          message += "Phone Number is required ";
        }
  
        if (item_price === "") {
          message += "Email is required ";
        }
  
        if (is_available === "") {
          message += "Username is required ";
        }
  
        if (item_image === "") {
          message += "Password is required ";
        }
        item_price = item_price.replace(/,/g, "").replace("₱", "");
        if (message !== "") {
          toastr.error(`Please fill up ${message}`, "Required");
        } else {
          $.ajax({
            type: "PUT",
            url: "/MerchantItem/edit",
            data: {
              item_id: id,
              item_name: item_name,
              size: size,
              category_id: category_id,
              description: description,
              item_price: parseFloat(item_price),
              is_available: is_available,
              item_image: item_image,
            },
            success: function (result) {
              if (result.msg == "success") {
                toastr.success("Saved Successfully", "Success");
                setTimeout(function () {
                  window.location.reload();
                }, 500);
              } else {
                toastr.warning("Data already exists!", "Warning");
              }
            },
            error: function (err) {
              toastr.warning("Data already exists!", "Warning");
            },
          });
        }
      });
  
      $("#searchTopUpHistory").on("input", function () {
        var query = $(this).val().toLowerCase();
        $("#topUpHistoryBody tr").each(function () {
          var referenceCode = $(this).find("td:eq(0)").text().toLowerCase();
          var amount = $(this).find("td:eq(1)").text().toLowerCase();
  
          if (referenceCode.includes(query) || amount.includes(query)) {
            $(this).show();
          } else {
            $(this).hide();
          }
        });
      });
  
      function searchTable() {
        var input, filter, found, table, tr, td, i, j;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("dataTableStudents");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
          td = tr[i].getElementsByTagName("td");
          for (j = 0; j < td.length; j++) {
            if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
              found = true;
            }
          }
          if (found) {
            tr[i].style.display = "";
            found = false;
          } else {
            tr[i].style.display = "none";
          }
        }
      }
  
      $(".toggle-password").on("click", function () {
        const passwordField = $("#addpassword");
        const eyeIcon = $("#eyeIcon");
        const fieldType =
          passwordField.attr("type") === "password" ? "text" : "password";
        passwordField.attr("type", fieldType);
        if (fieldType === "password") {
          eyeIcon.removeClass("bx-show").addClass("bx-hide");
        } else {
          eyeIcon.removeClass("bx-hide").addClass("bx-show");
        }
      });
  
      $(".toggle-password").on("click", function () {
        const passwordField = $("#editPassword");
        const eyeIcon = $("#eyeIconEdit");
        const fieldType =
          passwordField.attr("type") === "password" ? "text" : "password";
        passwordField.attr("type", fieldType);
        if (fieldType === "password") {
          eyeIcon.removeClass("bx-show").addClass("bx-hide");
        } else {
          eyeIcon.removeClass("bx-hide").addClass("bx-show");
        }
      });
  
  
      $(document).on("change", "#edititemimage", function (e) {
        const input = document.getElementById("edititemimage");
        const file = input.files[0];
  
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onloadend = function () {
          const preview = document.getElementById("viewUserImagePreview");
          preview.src = reader.result;
        };
        imageUploadedOld();
      });
  
      function imageUploadedOld() {
        const input = document.getElementById("edititemimage");
        const file = input.files[0];
  
        var reader = new FileReader();
  
        reader.onload = function (e) {
          const img = new Image();
          img.src = e.target.result;
  
          img.onload = function () {
            const canvas = document.createElement("canvas");
            const ctx = canvas.getContext("2d");
            const targetWidth = 250;
            const targetHeight = 250;
            canvas.width = targetWidth;
            canvas.height = targetHeight;
            ctx.drawImage(img, 0, 0, targetWidth, targetHeight);
            base64String = canvas
              .toDataURL()
              .replace("data:image/png;base64,", ""); 
  
            imageBase64Stringsep = base64String;
          };
  
        };
        reader.readAsDataURL(file);
      }
  
      $(document).on("change", "#additemimage", function (e) {
        const input = document.getElementById("additemimage");
        const file = input.files[0];
  
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onloadend = function () {
          const preview = document.getElementById("userImagePreview");
          preview.src = reader.result;
        };
        imageUploadedAdd();
      });
  
      function imageUploadedAdd() {
        const input = document.getElementById("additemimage");
        const file = input.files[0];
  
        var reader = new FileReader();
  
        reader.onload = function (e) {
          const img = new Image();
          img.src = e.target.result;
  
          img.onload = function () {
            const canvas = document.createElement("canvas");
            const ctx = canvas.getContext("2d");
            const targetWidth = 250;
            const targetHeight = 250;
            canvas.width = targetWidth;
            canvas.height = targetHeight;
            ctx.drawImage(img, 0, 0, targetWidth, targetHeight);
            base64String = canvas
              .toDataURL()
              .replace("data:image/png;base64,", ""); 
  
            imageBase64Stringsep = base64String;
          };
  
        };
        reader.readAsDataURL(file);
      }
    });
  </script>
  