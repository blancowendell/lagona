<script>
    let load_station_id = "";
    $(document).ready(function () {
      LoadTable();
      LoadHubList();
      LoadHubListEdit();
  
      function LoadTable() {
        $("#dataTableRiders").DataTable({
          destroy: true,
          processing: true,
          serverSide: true,
          paging: false,
          searching: false,
          info: false,
          scrollY: 600,
          scrollCollapse: true,
          serverMethod: "GET",
          ajax: {
            url: "/AdminRiders/load",
            dataSrc: (json) => {
                var finalData = [];
                var data = json.data;

                console.log(data,'DATA');

                $.each(data, (key, item) => {
                var action = `
                    <button id="editBtn" class="lagona_class-btn btn" name="editBtn" data-bs-toggle="modal" data-bs-target="#editLoadStationModal">
                    <i class="fas fa-fw fa-pen"></i>
                    </button>
                    <button id="topUpBtn" class="lagona_class-btn btn" name="topUpBtn" data-bs-toggle="modal" data-bs-target="#topUpModal">
                    <i class="fas fa-fw fa-eye"></i>
                    </button>
                `;

                finalData.push({
                    rider_id: item.rider_id,
                    rider_code: item.rider_code,
                    full_name: item.full_name,
                    address: item.address,
                    mobile_number: item.mobile_number,
                    rider_status: item.rider_status,
                    rider_registration_date: item.rider_registration_date,
                    action: action,
                });
                });

                return finalData;
            },
            },
            columns: [
            { data: "rider_id" },
            { data: "rider_code" },
            { data: "full_name" },
            { data: "address" },
            { data: "mobile_number" },
            { data: "rider_status" },
            { data: "rider_registration_date" },
            { data: "action" },
            ],
          createdRow: function (row, data, dataIndex) {
            // var jobStatusCell = $(row).find("td:eq(2)");
            // var jobStatusText = data.assessment_type;
  
            // var jobStatusClass = "";
            // if (jobStatusText === "Personality Test") {
            //     jobStatusClass =
            //         "badge badge-sm bg-gradient-success text-white rounded-pill";
            // } else if (jobStatusText === "Interest Assessment") {
            //     jobStatusClass =
            //         "badge badge-sm bg-gradient-danger text-white rounded-pill";
            // }
  
            // else if (jobStatusText === "Skill Assessment") {
            //     jobStatusClass =
            //         "badge badge-sm bg-gradient-warning text-black rounded-pill";
            // }
  
            // jobStatusCell.html(
            //     `<span class="${jobStatusClass}">${jobStatusText}</span>`
            // );
  
            $("td", row).each(function () {
              this.style.textAlign = "center";
              this.style.verticalAlign = "middle";
              this.style.fontSize = "14px";
            });
          },
          initComplete: function () {
            $("#dataTableStrandsType thead th").css({
              "font-size": "14px",
              "font-weight": "bold",
              "text-align": "center",
            });
          },
        });
      }
  
      function LoadHubList() {
        $.ajax({
          type: "GET",
          url: "/AdminHubs/load",
          success: function (result) {
            var data = result.data;
  
            $.each(data, function (key, item) {
              var options = new Option(item.hub_id, item.hub_id);
              $(options).html((item.hub_name) + ' - ' + (item.hub_code));
              $("#addhubname").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }
  
      $(document).on("click", "#saveLoadStationBtn", function () {
        let hub_code = $("#addhubname").val();
        let ownername = $("#addownername").val();
        let load_station_name = $("#addloadname").val();
        let load_station_address = $("#addlaodaddress").val();
        let phone_number = $("#addcpnumber").val();
        let email = $("#addemail").val();
        let username = $("#addusername").val();
        let password = $("#addpassword").val();
        let notes = $("#addnotes").val();
  
        var message = "";
  
        if (load_station_name === "") {
          message += "Station Name is required ";
        }
  
        if (ownername === "") {
          message += "Owner Name is required ";
        }
  
        if (load_station_address === "") {
          message += "Load Address is required ";
        }
  
        if (phone_number === "") {
          message += "Phone Number is required ";
        }
  
        if (email === "") {
          message += "Load Email is required ";
        }
  
        if (username === "") {
          message += "Load Username is required ";
        }
  
        if (password === "") {
          message += "Load Password is required ";
        }
  
        if (notes === "") {
          message += "Load Notes is required ";
        }
        
        if (message !== "") {
          toastr.error(`Please fill up ${message}`, "Required");
        } else {
          $.ajax({
            type: "POST",
            url: "/AdminLoadingStation/save",
            data: {
              hub_code: hub_code,
              owner_name: ownername,
              load_station_name: load_station_name,
              load_station_address: load_station_address,
              phone_number: phone_number,
              email: email,
              username: username,
              password: password,
              notes: notes,
            },
            success: function (result) {
              if (result.msg == "success") {
                toastr.success("Saved Successfully", "Success");
                setTimeout(function () {
                  window.location.reload();
                }, 1000);
              } else {
                toastr.warning("Data already exists!", "Warning");
              }
            },
            error: function (err) {
              toastr.warning("Data already exists!", "Warning");
            },
          });
        }
      });
  
      $("#dataTableLoadignStation tbody").on("click", "tr", function () {
        var dataRow = [];
        $(this)
          .closest("tr")
          .find("td")
          .each(function () {
            dataRow.push($(this).text());
          });
        load_station_id = dataRow[0];
        console.log(dataRow);
      });
  
      function LoadHubListEdit() {
        $.ajax({
          type: "GET",
          url: "/AdminHubs/load",
          success: function (result) {
            var data = result.data;
  
            $.each(data, function (key, item) {
              var options = new Option(item.hub_id, item.hub_id);
              $(options).html((item.hub_name) + ' - ' + (item.hub_code));
              $("#editHubName").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }
  
      $(document).on("click", "#editBtn", function () {
        $.ajax({
          type: "POST",
          url: "/AdminLoadingStation/getloadstation",
          data: {
            load_station_id: load_station_id,
          },
          success: function (result) {
            if (result.msg === "success") {
              const existingData = result.data;
  
              $.each(existingData, (key, item) => {
                $("#editHubName").val(item.hub_id);
                $("#editloadname").val(item.load_name);
                $("#editOwnerName").val(item.owner_name);
                $("#editloadaddress").val(item.load_address);
                $("#editPhoneNumber").val(item.phone_number);
                $("#editEmail").val(item.email);
                let formattedBudget = formatPeso(item.budget);
                $("#startingBudgetDisplay").text(formattedBudget);
                $("#editUsername").val(item.username);
                $("#editPassword").val(item.password);
                $("#editNotes").val(item.notes);
              });
            } else {
              toastr.error("Error fetching employee data", "Error");
            }
          },
          error: function (err) {
            toastr.error(
              "An error occurred while fetching employee data",
              "Error"
            );
          },
        });
      });
  
      $(document).on("click", "#saveEditLoadStationBtn", function () {
        let id = load_station_id;
        let hub_code = $("#editHubName").val();
        let load_staion_name = $("#editloadname").val();
        let ownername = $("#editOwnerName").val();
        let load_station_address = $("#editloadaddress").val();
        let phonenumber = $("#editPhoneNumber").val();
        let email = $("#editEmail").val();
        let username = $("#editUsername").val();
        let password = $("#editPassword").val();
        let notes = $("#editNotes").val();
  
        var message = "";
  
        if (hub_code === "") {
          message += "Hub Name is required ";
        }
  
        if (load_staion_name === "") {
          message += "Station Name is required ";
        }
  
        if (ownername === "" || ownername === null) {
          message += "Owner Name is required ";
        }
  
        if (load_station_address === "") {
          message += "Load Address is required ";
        }
  
        if (phonenumber === "") {
          message += "Phone Number is required ";
        }
  
        if (email === "" || email === null) { 
          message += "Load Email is required ";
        }
  
        if (username === "" || username === null) {
          message += "Load Username is required ";
        }
        
        if (password === "" || password === null) {
          message += "Load Password is required ";
        }
  
        if (message !== "") {
          toastr.error(`Please fill up ${message}`, "Required");
        } else {
          $.ajax({
            type: "PUT",
            url: "/AdminLoadingStation/edit",
            data: {
              load_id: id,            
              hub_code: hub_code,
              load_station_name: load_staion_name,
              owner_name: ownername,
              load_station_address: load_station_address,
              phone_number: phonenumber,
              email: email,
              username: username,
              password: password,
              notes: notes,
            },
            success: function (result) {
              if (result.msg == "success") {
                toastr.success("Saved Successfully", "Success");
                setTimeout(function () {
                  window.location.reload();
                }, 2000);
              } else {
                toastr.warning("Data already exists!", "Warning");
              }
            },
            error: function (err) {
              toastr.warning("Data already exists!", "Warning");
            },
          });
        }
      });
  
      $(document).on("click", "#topUpBtn", function () {
        $.ajax({
          type: "POST",
          url: "/AdminLoadingStation/getloadstation",
          data: {
            load_station_id: load_station_id,
          },
          success: function (result) {
            if (result.msg === "success") {
              const existingData = result.data;
  
              $.each(existingData, (key, item) => {
                $("#topuphubcode").html(`Top Up Load Station For - ${item.load_code}`);
                console.log(item.load_code);
  
                let formattedBudget = formatPeso(item.budget);
                $("#remainingBalance").text(formattedBudget);
              });
              $.ajax({
                type: "POST",
                url: "/AdminLoadingStation/gettopuphistory",
                data: {
                  load_station_id: load_station_id,
                },
                success: function (historyResult) {
                  if (historyResult.msg === "success") {
                    const historyData = historyResult.data;
                    $("#topUpHistoryBody").empty();
                    $.each(historyData, (index, item) => {
                      const row = `
                      <tr>
                        <td>${item.reference_code}</td>
                        <td>${formatPeso(item.amount)}</td>
                        <td>${item.format_create_date}</td>
                        <td>${item.status}</td>
                      </tr>
                    `;
                      $("#topUpHistoryBody").append(row);
                    });
                  } else {
                    toastr.error("Error fetching top-up history", "Error");
                  }
                },
                error: function (err) {
                  toastr.error(
                    "An error occurred while fetching top-up history",
                    "Error"
                  );
                },
              });
            } else {
              toastr.error("Error fetching hub data", "Error");
            }
          },
          error: function (err) {
            toastr.error("An error occurred while fetching hub data", "Error");
          },
        });
      });
  
      $(document).on("click", "#saveTopUpHubBtn", function () {
        console.log("click");
        let id = load_station_id;
        let amount = $("#topupamount").val();
  
        console.log(amount, "amount");
        console.log(load_station_id, "load_station_id");
  
        var message = "";
  
        let numericAmount = parseFloat(amount.replace(/[^\d.-]/g, ""));
        if (amount === "" || isNaN(numericAmount) || numericAmount <= 0) {
          message += "Valid amount is required. ";
        }
  
        if (id === "") {
          message += "Hub Undefined";
        }
  
        if (message !== "") {
          toastr.error(`Please fill up ${message}`, "Required");
        } else {
          Swal.fire({
            title: "Are you sure?",
            text: `You are about to top up ${amount} to the hub. Do you want to proceed?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, top up it!",
            cancelButtonText: "Cancel",
            reverseButtons: true,
          }).then((result) => {
            if (result.isConfirmed) {
              Swal.fire({
                title: "Processing...",
                text: "Please wait while we top up the amount.",
                icon: "info",
                didOpen: () => {
                  Swal.showLoading();
                },
                allowOutsideClick: false,
              });
  
              $.ajax({
                type: "POST",
                url: "/AdminLoadingStation/topup",
                data: {
                  load_station_id: id,
                  amount: amount,
                },
                success: function (result) {
                  if (result.msg == "success") {
                    toastr.success("Saved Successfully", "Success");
                    // Close the SweetAlert loading after 2 seconds and reload the page
                    setTimeout(function () {
                      Swal.close(); // Close the loading SweetAlert
                      window.location.reload();
                    }, 2000);
                  } else {
                    toastr.warning("Data already exists!", "Warning");
                    Swal.close(); // Close the SweetAlert if error occurs
                  }
                },
                error: function (err) {
                  toastr.warning("An error occurred!", "Error");
                  Swal.close(); // Close the SweetAlert if error occurs
                },
              });
            } else {
              console.log("Top-up cancelled");
            }
          });
        }
      });
  
      $("#searchTopUpHistory").on("input", function () {
        var query = $(this).val().toLowerCase();
        $("#topUpHistoryBody tr").each(function () {
          var referenceCode = $(this).find("td:eq(0)").text().toLowerCase();
          var amount = $(this).find("td:eq(1)").text().toLowerCase();
  
          if (referenceCode.includes(query) || amount.includes(query)) {
            $(this).show();
          } else {
            $(this).hide();
          }
        });
      });
  
      function searchTable() {
        var input, filter, found, table, tr, td, i, j;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("dataTableStudents");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
          td = tr[i].getElementsByTagName("td");
          for (j = 0; j < td.length; j++) {
            if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
              found = true;
            }
          }
          if (found) {
            tr[i].style.display = "";
            found = false;
          } else {
            tr[i].style.display = "none";
          }
        }
      }
  
      $(".toggle-password").on("click", function () {
        const passwordField = $("#addpassword");
        const eyeIcon = $("#eyeIcon");
        const fieldType =
          passwordField.attr("type") === "password" ? "text" : "password";
        passwordField.attr("type", fieldType);
        if (fieldType === "password") {
          eyeIcon.removeClass("bx-show").addClass("bx-hide");
        } else {
          eyeIcon.removeClass("bx-hide").addClass("bx-show");
        }
      });
  
      $(".toggle-password").on("click", function () {
        const passwordField = $("#editPassword");
        const eyeIcon = $("#eyeIconEdit");
        const fieldType =
          passwordField.attr("type") === "password" ? "text" : "password";
        passwordField.attr("type", fieldType);
        if (fieldType === "password") {
          eyeIcon.removeClass("bx-show").addClass("bx-hide");
        } else {
          eyeIcon.removeClass("bx-hide").addClass("bx-show");
        }
      });
    });
  </script>
  